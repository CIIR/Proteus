- import ciir.proteus.ProteusFunctions._
- val t = topic.get
%link(rel="stylesheet" type="text/css" href="assets/css/jqcloud.css")
%script(src="assets/js/jqcloud-1.0.0.min.js")
- if (t.words.isDefined)
 .span6
  %h3 Term Importance:
  - var topWordList = t.words.get.terms.take(50)
  - val sum = topWordList.map(_.weight).sum
  - topWordList = topWordList.map(wt => WeightedTerm(term = wt.term, weight = (wt.weight / sum)))
  - val entries = topWordList.map(wt => """{text:"%s", weight: %f}""" format (wt.term, wt.weight)).mkString(",")
  :!javascript
   var word_list = new Array(
    #{entries}
   );
   $(document).ready(function() {
    $("#wordcloud").jQCloud(word_list, {width:440, height:330});
   });
  %div#wordcloud
- if (t.pages.isDefined)
 .span5
  %h3 Top 10 Most Relevant Pages:
  - 
   var pageList = t.pages.get.termLists.toList.map {
    A => A._2.terms.map(wt => WeightedTerm(A._1 +"_"+ wt.term, wt.weight))
   }.flatten.sortBy(_.weight).reverse.take(10)
  - for (page <- pageList)
   %div
    - var pageId = page.term + "--sPage--sportland"
    %a(href = "/details?id=#{pageId}") #{pageId}