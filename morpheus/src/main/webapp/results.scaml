- import ciir.proteus.ProteusFunctions._
-@ val results : Map[String, List[AnyRef]]
.row-fluid
 .span12
  %ul.nav.nav-tabs#resultTabs
   - for (resType <- results.keys.toList.sorted)
    %li 
     %a(href="##{resType}tab" data-toggle="tab") 
      #{pluralDisplayName(resType)} (#{results(resType).size})
  
  -# Loop over result types and display by calling "collection" on the set  
  .tab-content#resultContent
   - for (resType <- results.keys.toList.sorted)
    .tab-pane.fade(id="#{resType}tab")
     %table.table-bordered.table-striped.span9
      = collection(results(resType), "show")
     .span3
      = render("/transformations.scaml", Map('typeName -> resType))
  -# Activate the first result pane and check the types
     we searched for.
  %script{:type => "text/javascript", :src => "assets/js/proteus/search-functions.js"}
