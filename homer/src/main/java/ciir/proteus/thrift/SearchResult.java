/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package ciir.proteus.thrift;

import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class SearchResult implements org.apache.thrift.TBase<SearchResult, SearchResult._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SearchResult");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField SCORE_FIELD_DESC = new org.apache.thrift.protocol.TField("score", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("title", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField SUMMARY_FIELD_DESC = new org.apache.thrift.protocol.TField("summary", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField IMG_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("img_url", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField THUMB_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("thumb_url", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField EXTERNAL_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("external_url", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField FULL_OBJECT_FIELD_DESC = new org.apache.thrift.protocol.TField("full_object", org.apache.thrift.protocol.TType.STRUCT, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SearchResultStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SearchResultTupleSchemeFactory());
  }

  public AccessIdentifier id; // required
  public double score; // required
  public String title; // optional
  public ResultSummary summary; // optional
  public String img_url; // optional
  public String thumb_url; // optional
  public String external_url; // optional
  public ProteusObject full_object; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    SCORE((short)2, "score"),
    TITLE((short)3, "title"),
    SUMMARY((short)4, "summary"),
    IMG_URL((short)5, "img_url"),
    THUMB_URL((short)6, "thumb_url"),
    EXTERNAL_URL((short)7, "external_url"),
    FULL_OBJECT((short)8, "full_object");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // SCORE
          return SCORE;
        case 3: // TITLE
          return TITLE;
        case 4: // SUMMARY
          return SUMMARY;
        case 5: // IMG_URL
          return IMG_URL;
        case 6: // THUMB_URL
          return THUMB_URL;
        case 7: // EXTERNAL_URL
          return EXTERNAL_URL;
        case 8: // FULL_OBJECT
          return FULL_OBJECT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SCORE_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.TITLE,_Fields.SUMMARY,_Fields.IMG_URL,_Fields.THUMB_URL,_Fields.EXTERNAL_URL,_Fields.FULL_OBJECT};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AccessIdentifier.class)));
    tmpMap.put(_Fields.SCORE, new org.apache.thrift.meta_data.FieldMetaData("score", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("title", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY, new org.apache.thrift.meta_data.FieldMetaData("summary", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ResultSummary.class)));
    tmpMap.put(_Fields.IMG_URL, new org.apache.thrift.meta_data.FieldMetaData("img_url", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.THUMB_URL, new org.apache.thrift.meta_data.FieldMetaData("thumb_url", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTERNAL_URL, new org.apache.thrift.meta_data.FieldMetaData("external_url", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FULL_OBJECT, new org.apache.thrift.meta_data.FieldMetaData("full_object", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProteusObject.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SearchResult.class, metaDataMap);
  }

  public SearchResult() {
  }

  public SearchResult(
    AccessIdentifier id,
    double score)
  {
    this();
    this.id = id;
    this.score = score;
    setScoreIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SearchResult(SearchResult other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = new AccessIdentifier(other.id);
    }
    this.score = other.score;
    if (other.isSetTitle()) {
      this.title = other.title;
    }
    if (other.isSetSummary()) {
      this.summary = new ResultSummary(other.summary);
    }
    if (other.isSetImg_url()) {
      this.img_url = other.img_url;
    }
    if (other.isSetThumb_url()) {
      this.thumb_url = other.thumb_url;
    }
    if (other.isSetExternal_url()) {
      this.external_url = other.external_url;
    }
    if (other.isSetFull_object()) {
      this.full_object = new ProteusObject(other.full_object);
    }
  }

  public SearchResult deepCopy() {
    return new SearchResult(this);
  }

  @Override
  public void clear() {
    this.id = null;
    setScoreIsSet(false);
    this.score = 0.0;
    this.title = null;
    this.summary = null;
    this.img_url = null;
    this.thumb_url = null;
    this.external_url = null;
    this.full_object = null;
  }

  public AccessIdentifier getId() {
    return this.id;
  }

  public SearchResult setId(AccessIdentifier id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public double getScore() {
    return this.score;
  }

  public SearchResult setScore(double score) {
    this.score = score;
    setScoreIsSet(true);
    return this;
  }

  public void unsetScore() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SCORE_ISSET_ID);
  }

  /** Returns true if field score is set (has been assigned a value) and false otherwise */
  public boolean isSetScore() {
    return EncodingUtils.testBit(__isset_bitfield, __SCORE_ISSET_ID);
  }

  public void setScoreIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SCORE_ISSET_ID, value);
  }

  public String getTitle() {
    return this.title;
  }

  public SearchResult setTitle(String title) {
    this.title = title;
    return this;
  }

  public void unsetTitle() {
    this.title = null;
  }

  /** Returns true if field title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.title = null;
    }
  }

  public ResultSummary getSummary() {
    return this.summary;
  }

  public SearchResult setSummary(ResultSummary summary) {
    this.summary = summary;
    return this;
  }

  public void unsetSummary() {
    this.summary = null;
  }

  /** Returns true if field summary is set (has been assigned a value) and false otherwise */
  public boolean isSetSummary() {
    return this.summary != null;
  }

  public void setSummaryIsSet(boolean value) {
    if (!value) {
      this.summary = null;
    }
  }

  public String getImg_url() {
    return this.img_url;
  }

  public SearchResult setImg_url(String img_url) {
    this.img_url = img_url;
    return this;
  }

  public void unsetImg_url() {
    this.img_url = null;
  }

  /** Returns true if field img_url is set (has been assigned a value) and false otherwise */
  public boolean isSetImg_url() {
    return this.img_url != null;
  }

  public void setImg_urlIsSet(boolean value) {
    if (!value) {
      this.img_url = null;
    }
  }

  public String getThumb_url() {
    return this.thumb_url;
  }

  public SearchResult setThumb_url(String thumb_url) {
    this.thumb_url = thumb_url;
    return this;
  }

  public void unsetThumb_url() {
    this.thumb_url = null;
  }

  /** Returns true if field thumb_url is set (has been assigned a value) and false otherwise */
  public boolean isSetThumb_url() {
    return this.thumb_url != null;
  }

  public void setThumb_urlIsSet(boolean value) {
    if (!value) {
      this.thumb_url = null;
    }
  }

  public String getExternal_url() {
    return this.external_url;
  }

  public SearchResult setExternal_url(String external_url) {
    this.external_url = external_url;
    return this;
  }

  public void unsetExternal_url() {
    this.external_url = null;
  }

  /** Returns true if field external_url is set (has been assigned a value) and false otherwise */
  public boolean isSetExternal_url() {
    return this.external_url != null;
  }

  public void setExternal_urlIsSet(boolean value) {
    if (!value) {
      this.external_url = null;
    }
  }

  public ProteusObject getFull_object() {
    return this.full_object;
  }

  public SearchResult setFull_object(ProteusObject full_object) {
    this.full_object = full_object;
    return this;
  }

  public void unsetFull_object() {
    this.full_object = null;
  }

  /** Returns true if field full_object is set (has been assigned a value) and false otherwise */
  public boolean isSetFull_object() {
    return this.full_object != null;
  }

  public void setFull_objectIsSet(boolean value) {
    if (!value) {
      this.full_object = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((AccessIdentifier)value);
      }
      break;

    case SCORE:
      if (value == null) {
        unsetScore();
      } else {
        setScore((Double)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((String)value);
      }
      break;

    case SUMMARY:
      if (value == null) {
        unsetSummary();
      } else {
        setSummary((ResultSummary)value);
      }
      break;

    case IMG_URL:
      if (value == null) {
        unsetImg_url();
      } else {
        setImg_url((String)value);
      }
      break;

    case THUMB_URL:
      if (value == null) {
        unsetThumb_url();
      } else {
        setThumb_url((String)value);
      }
      break;

    case EXTERNAL_URL:
      if (value == null) {
        unsetExternal_url();
      } else {
        setExternal_url((String)value);
      }
      break;

    case FULL_OBJECT:
      if (value == null) {
        unsetFull_object();
      } else {
        setFull_object((ProteusObject)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case SCORE:
      return Double.valueOf(getScore());

    case TITLE:
      return getTitle();

    case SUMMARY:
      return getSummary();

    case IMG_URL:
      return getImg_url();

    case THUMB_URL:
      return getThumb_url();

    case EXTERNAL_URL:
      return getExternal_url();

    case FULL_OBJECT:
      return getFull_object();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case SCORE:
      return isSetScore();
    case TITLE:
      return isSetTitle();
    case SUMMARY:
      return isSetSummary();
    case IMG_URL:
      return isSetImg_url();
    case THUMB_URL:
      return isSetThumb_url();
    case EXTERNAL_URL:
      return isSetExternal_url();
    case FULL_OBJECT:
      return isSetFull_object();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SearchResult)
      return this.equals((SearchResult)that);
    return false;
  }

  public boolean equals(SearchResult that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_score = true;
    boolean that_present_score = true;
    if (this_present_score || that_present_score) {
      if (!(this_present_score && that_present_score))
        return false;
      if (this.score != that.score)
        return false;
    }

    boolean this_present_title = true && this.isSetTitle();
    boolean that_present_title = true && that.isSetTitle();
    if (this_present_title || that_present_title) {
      if (!(this_present_title && that_present_title))
        return false;
      if (!this.title.equals(that.title))
        return false;
    }

    boolean this_present_summary = true && this.isSetSummary();
    boolean that_present_summary = true && that.isSetSummary();
    if (this_present_summary || that_present_summary) {
      if (!(this_present_summary && that_present_summary))
        return false;
      if (!this.summary.equals(that.summary))
        return false;
    }

    boolean this_present_img_url = true && this.isSetImg_url();
    boolean that_present_img_url = true && that.isSetImg_url();
    if (this_present_img_url || that_present_img_url) {
      if (!(this_present_img_url && that_present_img_url))
        return false;
      if (!this.img_url.equals(that.img_url))
        return false;
    }

    boolean this_present_thumb_url = true && this.isSetThumb_url();
    boolean that_present_thumb_url = true && that.isSetThumb_url();
    if (this_present_thumb_url || that_present_thumb_url) {
      if (!(this_present_thumb_url && that_present_thumb_url))
        return false;
      if (!this.thumb_url.equals(that.thumb_url))
        return false;
    }

    boolean this_present_external_url = true && this.isSetExternal_url();
    boolean that_present_external_url = true && that.isSetExternal_url();
    if (this_present_external_url || that_present_external_url) {
      if (!(this_present_external_url && that_present_external_url))
        return false;
      if (!this.external_url.equals(that.external_url))
        return false;
    }

    boolean this_present_full_object = true && this.isSetFull_object();
    boolean that_present_full_object = true && that.isSetFull_object();
    if (this_present_full_object || that_present_full_object) {
      if (!(this_present_full_object && that_present_full_object))
        return false;
      if (!this.full_object.equals(that.full_object))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_id = true && (isSetId());
    builder.append(present_id);
    if (present_id)
      builder.append(id);

    boolean present_score = true;
    builder.append(present_score);
    if (present_score)
      builder.append(score);

    boolean present_title = true && (isSetTitle());
    builder.append(present_title);
    if (present_title)
      builder.append(title);

    boolean present_summary = true && (isSetSummary());
    builder.append(present_summary);
    if (present_summary)
      builder.append(summary);

    boolean present_img_url = true && (isSetImg_url());
    builder.append(present_img_url);
    if (present_img_url)
      builder.append(img_url);

    boolean present_thumb_url = true && (isSetThumb_url());
    builder.append(present_thumb_url);
    if (present_thumb_url)
      builder.append(thumb_url);

    boolean present_external_url = true && (isSetExternal_url());
    builder.append(present_external_url);
    if (present_external_url)
      builder.append(external_url);

    boolean present_full_object = true && (isSetFull_object());
    builder.append(present_full_object);
    if (present_full_object)
      builder.append(full_object);

    return builder.toHashCode();
  }

  public int compareTo(SearchResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SearchResult typedOther = (SearchResult)other;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(typedOther.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, typedOther.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetScore()).compareTo(typedOther.isSetScore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.score, typedOther.score);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTitle()).compareTo(typedOther.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.title, typedOther.title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary()).compareTo(typedOther.isSetSummary());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary, typedOther.summary);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetImg_url()).compareTo(typedOther.isSetImg_url());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImg_url()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.img_url, typedOther.img_url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThumb_url()).compareTo(typedOther.isSetThumb_url());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThumb_url()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thumb_url, typedOther.thumb_url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExternal_url()).compareTo(typedOther.isSetExternal_url());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExternal_url()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.external_url, typedOther.external_url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFull_object()).compareTo(typedOther.isSetFull_object());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFull_object()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.full_object, typedOther.full_object);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SearchResult(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("score:");
    sb.append(this.score);
    first = false;
    if (isSetTitle()) {
      if (!first) sb.append(", ");
      sb.append("title:");
      if (this.title == null) {
        sb.append("null");
      } else {
        sb.append(this.title);
      }
      first = false;
    }
    if (isSetSummary()) {
      if (!first) sb.append(", ");
      sb.append("summary:");
      if (this.summary == null) {
        sb.append("null");
      } else {
        sb.append(this.summary);
      }
      first = false;
    }
    if (isSetImg_url()) {
      if (!first) sb.append(", ");
      sb.append("img_url:");
      if (this.img_url == null) {
        sb.append("null");
      } else {
        sb.append(this.img_url);
      }
      first = false;
    }
    if (isSetThumb_url()) {
      if (!first) sb.append(", ");
      sb.append("thumb_url:");
      if (this.thumb_url == null) {
        sb.append("null");
      } else {
        sb.append(this.thumb_url);
      }
      first = false;
    }
    if (isSetExternal_url()) {
      if (!first) sb.append(", ");
      sb.append("external_url:");
      if (this.external_url == null) {
        sb.append("null");
      } else {
        sb.append(this.external_url);
      }
      first = false;
    }
    if (isSetFull_object()) {
      if (!first) sb.append(", ");
      sb.append("full_object:");
      if (this.full_object == null) {
        sb.append("null");
      } else {
        sb.append(this.full_object);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (id != null) {
      id.validate();
    }
    if (summary != null) {
      summary.validate();
    }
    if (full_object != null) {
      full_object.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SearchResultStandardSchemeFactory implements SchemeFactory {
    public SearchResultStandardScheme getScheme() {
      return new SearchResultStandardScheme();
    }
  }

  private static class SearchResultStandardScheme extends StandardScheme<SearchResult> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SearchResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.id = new AccessIdentifier();
              struct.id.read(iprot);
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SCORE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.score = iprot.readDouble();
              struct.setScoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SUMMARY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.summary = new ResultSummary();
              struct.summary.read(iprot);
              struct.setSummaryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // IMG_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.img_url = iprot.readString();
              struct.setImg_urlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // THUMB_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thumb_url = iprot.readString();
              struct.setThumb_urlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // EXTERNAL_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.external_url = iprot.readString();
              struct.setExternal_urlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // FULL_OBJECT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.full_object = new ProteusObject();
              struct.full_object.read(iprot);
              struct.setFull_objectIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SearchResult struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        struct.id.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(SCORE_FIELD_DESC);
      oprot.writeDouble(struct.score);
      oprot.writeFieldEnd();
      if (struct.title != null) {
        if (struct.isSetTitle()) {
          oprot.writeFieldBegin(TITLE_FIELD_DESC);
          oprot.writeString(struct.title);
          oprot.writeFieldEnd();
        }
      }
      if (struct.summary != null) {
        if (struct.isSetSummary()) {
          oprot.writeFieldBegin(SUMMARY_FIELD_DESC);
          struct.summary.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.img_url != null) {
        if (struct.isSetImg_url()) {
          oprot.writeFieldBegin(IMG_URL_FIELD_DESC);
          oprot.writeString(struct.img_url);
          oprot.writeFieldEnd();
        }
      }
      if (struct.thumb_url != null) {
        if (struct.isSetThumb_url()) {
          oprot.writeFieldBegin(THUMB_URL_FIELD_DESC);
          oprot.writeString(struct.thumb_url);
          oprot.writeFieldEnd();
        }
      }
      if (struct.external_url != null) {
        if (struct.isSetExternal_url()) {
          oprot.writeFieldBegin(EXTERNAL_URL_FIELD_DESC);
          oprot.writeString(struct.external_url);
          oprot.writeFieldEnd();
        }
      }
      if (struct.full_object != null) {
        if (struct.isSetFull_object()) {
          oprot.writeFieldBegin(FULL_OBJECT_FIELD_DESC);
          struct.full_object.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SearchResultTupleSchemeFactory implements SchemeFactory {
    public SearchResultTupleScheme getScheme() {
      return new SearchResultTupleScheme();
    }
  }

  private static class SearchResultTupleScheme extends TupleScheme<SearchResult> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SearchResult struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetScore()) {
        optionals.set(1);
      }
      if (struct.isSetTitle()) {
        optionals.set(2);
      }
      if (struct.isSetSummary()) {
        optionals.set(3);
      }
      if (struct.isSetImg_url()) {
        optionals.set(4);
      }
      if (struct.isSetThumb_url()) {
        optionals.set(5);
      }
      if (struct.isSetExternal_url()) {
        optionals.set(6);
      }
      if (struct.isSetFull_object()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetId()) {
        struct.id.write(oprot);
      }
      if (struct.isSetScore()) {
        oprot.writeDouble(struct.score);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.title);
      }
      if (struct.isSetSummary()) {
        struct.summary.write(oprot);
      }
      if (struct.isSetImg_url()) {
        oprot.writeString(struct.img_url);
      }
      if (struct.isSetThumb_url()) {
        oprot.writeString(struct.thumb_url);
      }
      if (struct.isSetExternal_url()) {
        oprot.writeString(struct.external_url);
      }
      if (struct.isSetFull_object()) {
        struct.full_object.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SearchResult struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.id = new AccessIdentifier();
        struct.id.read(iprot);
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.score = iprot.readDouble();
        struct.setScoreIsSet(true);
      }
      if (incoming.get(2)) {
        struct.title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(3)) {
        struct.summary = new ResultSummary();
        struct.summary.read(iprot);
        struct.setSummaryIsSet(true);
      }
      if (incoming.get(4)) {
        struct.img_url = iprot.readString();
        struct.setImg_urlIsSet(true);
      }
      if (incoming.get(5)) {
        struct.thumb_url = iprot.readString();
        struct.setThumb_urlIsSet(true);
      }
      if (incoming.get(6)) {
        struct.external_url = iprot.readString();
        struct.setExternal_urlIsSet(true);
      }
      if (incoming.get(7)) {
        struct.full_object = new ProteusObject();
        struct.full_object.read(iprot);
        struct.setFull_objectIsSet(true);
      }
    }
  }

}

