




<!DOCTYPE html>
<html class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    
    <title>jquery-simple-combobox/js/jquery.scombobox.min.js at master Â· ivkremer/jquery-simple-combobox</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="ivkremer/jquery-simple-combobox" name="twitter:title" /><meta content="jquery-simple-combobox - A jQuery combobox (selectbox) plugin." name="twitter:description" /><meta content="https://avatars2.githubusercontent.com/u/6074696?s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars2.githubusercontent.com/u/6074696?s=400" property="og:image" /><meta content="ivkremer/jquery-simple-combobox" property="og:title" /><meta content="https://github.com/ivkremer/jquery-simple-combobox" property="og:url" /><meta content="jquery-simple-combobox - A jQuery combobox (selectbox) plugin." property="og:description" />

    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />

    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="8077F6E1:5228:3621214:537A1B97" name="octolytics-dimension-request_id" /><meta content="747731" name="octolytics-actor-id" /><meta content="mzarozinski" name="octolytics-actor-login" /><meta content="e257c505a272511c1aa5c86a85a9a42c7304a60d1f378a38e5daf04655fdfd27" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="oDvgRxuSuodleUVXQoKS1aU1GV9KjHXTyTTgzCB2iJx7N5CheA16z/nfzNWNuavX8bhXaXTR7OxYY82nhuZspg==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-6ea0c0e56db1fb59238068401b012808e41ae7c5.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-a49192fef33ef6e2053a634597427056eb62d634.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="dc8843b84110c15f6feb1839ea3211e7">

      
  <meta name="description" content="jquery-simple-combobox - A jQuery combobox (selectbox) plugin." />

  <meta content="6074696" name="octolytics-dimension-user_id" /><meta content="ivkremer" name="octolytics-dimension-user_login" /><meta content="14829124" name="octolytics-dimension-repository_id" /><meta content="ivkremer/jquery-simple-combobox" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="14829124" name="octolytics-dimension-repository_network_root_id" /><meta content="ivkremer/jquery-simple-combobox" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/ivkremer/jquery-simple-combobox/commits/master.atom" rel="alternate" title="Recent Commits to jquery-simple-combobox:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production linux vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/orgs/CIIR/dashboard">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" aria-label="You have unread notifications" class="notification-indicator tooltipped tooltipped-s" data-hotkey="g n">
        <span class="mail-status unread"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<div class="commandbar">
  <span class="message"></span>
  <input type="text" data-hotkey="s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="mzarozinski"
      data-repo="ivkremer/jquery-simple-combobox"
      data-branch="master"
      data-sha="2afc3af4eeac2cb177e95ea4f1b745b90e147f6c"
  >
  <div class="display hidden"></div>
</div>

    <input type="hidden" name="nwo" value="ivkremer/jquery-simple-combobox" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/mzarozinski" class="name">
        <img alt="Michael Zarozinski" class=" js-avatar" data-user="747731" height="20" src="https://avatars0.githubusercontent.com/u/747731?s=140" width="20" /> mzarozinski
      </a>
    </li>

    <li class="new-menu dropdown-toggle js-menu-container">
      <a href="#" class="js-menu-target tooltipped tooltipped-s" aria-label="Create new...">
        <span class="octicon octicon-plus"></span>
        <span class="dropdown-arrow"></span>
      </a>

      <div class="new-menu-content js-menu-content">
      </div>
    </li>

    <li>
      <a href="/settings/profile" id="account_settings"
        class="tooltipped tooltipped-s"
        aria-label="Account settings ">
        <span class="octicon octicon-tools"></span>
      </a>
    </li>
    <li>
      <form class="logout-form" action="/logout" method="post">
        <button class="sign-out-button tooltipped tooltipped-s" aria-label="Sign out">
          <span class="octicon octicon-log-out"></span>
        </button>
      </form>
    </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="ivkremer/jquery-simple-combobox">This repository</span>
    </li>
      <li>
        <a href="/ivkremer/jquery-simple-combobox/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="kuVQT52B+3rVRkIXzQhYzlC/XFi8Ztuoo7VfaMUj2jfOrkxKHBEWbihTMrYob5r8WRnr/LBsr91wYXbYwqv0fw==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="14829124" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/ivkremer/jquery-simple-combobox/watchers">
        4
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/ivkremer/jquery-simple-combobox/unstar" class="js-toggler-form starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="1SfkwyGGWOA0cvfp5DKr0uPgwZABVAuV2amdGTBzIbP+bVnOEflY0C4ieiwczdTW4I1C4AqCQFNsOAoaJQFkfA==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar ivkremer/jquery-simple-combobox">
        <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
      </button>
        <a class="social-count js-social-count" href="/ivkremer/jquery-simple-combobox/stargazers">
          7
        </a>
</form>
    <form accept-charset="UTF-8" action="/ivkremer/jquery-simple-combobox/star" class="js-toggler-form unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="mTJ0e04YSCAuqtA+B2UXX8kjFj1ZqbAXCd2IpgW5zgsPnEBmPuaA3OZ28AXyhYTxJX3RoSOoP/G+d41UA4cAoA==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star ivkremer/jquery-simple-combobox">
        <span class="octicon octicon-star"></span><span class="text">Star</span>
      </button>
        <a class="social-count js-social-count" href="/ivkremer/jquery-simple-combobox/stargazers">
          7
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/ivkremer/jquery-simple-combobox/fork" class="minibutton with-count js-toggler-target fork-button lighter tooltipped-n" title="Fork your own copy of ivkremer/jquery-simple-combobox to your account" aria-label="Fork your own copy of ivkremer/jquery-simple-combobox to your account" rel="facebox nofollow">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/ivkremer/jquery-simple-combobox/network" class="social-count">6</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/ivkremer" class="url fn" itemprop="url" rel="author"><span itemprop="title">ivkremer</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/ivkremer/jquery-simple-combobox" class="js-current-repository js-repo-home-link">jquery-simple-combobox</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/ivkremer/jquery-simple-combobox" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /ivkremer/jquery-simple-combobox">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/ivkremer/jquery-simple-combobox/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues /ivkremer/jquery-simple-combobox/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>2</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/ivkremer/jquery-simple-combobox/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /ivkremer/jquery-simple-combobox/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>0</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/ivkremer/jquery-simple-combobox/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g w" data-selected-links="repo_wiki /ivkremer/jquery-simple-combobox/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/ivkremer/jquery-simple-combobox/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /ivkremer/jquery-simple-combobox/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/ivkremer/jquery-simple-combobox/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /ivkremer/jquery-simple-combobox/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/ivkremer/jquery-simple-combobox/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /ivkremer/jquery-simple-combobox/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/ivkremer/jquery-simple-combobox.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/ivkremer/jquery-simple-combobox.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:ivkremer/jquery-simple-combobox.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:ivkremer/jquery-simple-combobox.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/ivkremer/jquery-simple-combobox" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/ivkremer/jquery-simple-combobox" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>



                <a href="/ivkremer/jquery-simple-combobox/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download ivkremer/jquery-simple-combobox as a zip file"
                   title="Download ivkremer/jquery-simple-combobox as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<a href="/ivkremer/jquery-simple-combobox/blob/2293819f7e9b322eeb0bbcfe411084cd6f32b055/js/jquery.scombobox.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:2239f57b919fff31d370a98ca0c48265 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/ivkremer/jquery-simple-combobox/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/ivkremer/jquery-simple-combobox/blob/master/js/jquery.scombobox.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/ivkremer/jquery-simple-combobox/tree/1.1.8/js/jquery.scombobox.min.js"
                 data-name="1.1.8"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="1.1.8">1.1.8</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/ivkremer/jquery-simple-combobox/tree/1.1.7/js/jquery.scombobox.min.js"
                 data-name="1.1.7"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="1.1.7">1.1.7</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/ivkremer/jquery-simple-combobox/tree/1.1.6/js/jquery.scombobox.min.js"
                 data-name="1.1.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="1.1.6">1.1.6</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/ivkremer/jquery-simple-combobox/tree/1.1.3/js/jquery.scombobox.min.js"
                 data-name="1.1.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="1.1.3">1.1.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/ivkremer/jquery-simple-combobox/tree/1.1.2/js/jquery.scombobox.min.js"
                 data-name="1.1.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="1.1.2">1.1.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/ivkremer/jquery-simple-combobox/tree/1.1.0/js/jquery.scombobox.min.js"
                 data-name="1.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="1.1.0">1.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/ivkremer/jquery-simple-combobox/tree/1.0.0/js/jquery.scombobox.min.js"
                 data-name="1.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="1.0.0">1.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/ivkremer/jquery-simple-combobox/tree/0.1.4/js/jquery.scombobox.min.js"
                 data-name="0.1.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="0.1.4">0.1.4</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/ivkremer/jquery-simple-combobox" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">jquery-simple-combobox</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/ivkremer/jquery-simple-combobox/tree/master/js" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">js</span></a></span><span class="separator"> / </span><strong class="final-path">jquery.scombobox.min.js</strong> <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="js/jquery.scombobox.min.js" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>
</div>


  <div class="commit file-history-tease">
      <img alt="Ilya Kremer" class="main-avatar js-avatar" data-user="6074696" height="24" src="https://avatars1.githubusercontent.com/u/6074696?s=140" width="24" />
      <span class="author"><a href="/ivkremer" rel="author">ivkremer</a></span>
      <time datetime="2014-05-10T16:30:56+04:00" is="relative-time" title-format="%Y-%m-%d %H:%M:%S %z" title="2014-05-10 16:30:56 +0400">May 10, 2014</time>
      <div class="commit-title">
          <a href="/ivkremer/jquery-simple-combobox/commit/6ddc8fb616bb5cc235fc68863239619b014c57b7" class="message" data-pjax="true" title="Bug fix (#6)">Bug fix (</a><a href="https://github.com/ivkremer/jquery-simple-combobox/issues/6" class="issue-link" title='"TypeError: this.parent(...).data(...) is undefined" message occurs after DOM-object has been deleted.'>#6</a><a href="/ivkremer/jquery-simple-combobox/commit/6ddc8fb616bb5cc235fc68863239619b014c57b7" class="message" data-pjax="true" title="Bug fix (#6)">)</a>
      </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong>  contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Ilya Kremer" class=" js-avatar" data-user="6074696" height="24" src="https://avatars1.githubusercontent.com/u/6074696?s=140" width="24" />
            <a href="/ivkremer">ivkremer</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>38 lines (38 sloc)</span>
          <span class="meta-divider"></span>
        <span>17.099 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
                <a class="minibutton tooltipped tooltipped-n js-update-url-with-hash"
                   aria-label="Clicking this button will automatically fork this project so you can edit the file"
                   href="/ivkremer/jquery-simple-combobox/edit/master/js/jquery.scombobox.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/ivkremer/jquery-simple-combobox/raw/master/js/jquery.scombobox.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/ivkremer/jquery-simple-combobox/blame/master/js/jquery.scombobox.min.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/ivkremer/jquery-simple-combobox/commits/master/js/jquery.scombobox.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

            <a class="minibutton danger empty-icon tooltipped tooltipped-s"
               href="/ivkremer/jquery-simple-combobox/delete/master/js/jquery.scombobox.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">

          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="cm">/**</span></div><div class='line' id='LC2'><span class="cm"> * jquery.simple-combobox v1.1.8 (2014-03-27): jQuery combobox plugin | (c) 2014 Ilya Kremer</span></div><div class='line' id='LC3'><span class="cm"> * MIT license http://www.opensource.org/licenses/mit-license.php</span></div><div class='line' id='LC4'><span class="cm"> * Minified by Google Closure Compiler</span></div><div class='line' id='LC5'><span class="cm"> */</span></div><div class='line' id='LC6'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">L</span><span class="p">){</span><span class="kd">function</span> <span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">fast</span><span class="o">:</span><span class="mi">200</span><span class="p">,</span><span class="nx">normal</span><span class="o">:</span><span class="mi">400</span><span class="p">,</span><span class="nx">slow</span><span class="o">:</span><span class="mi">600</span><span class="p">}[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="s2">&quot;function&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">g</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">g</span><span class="o">?</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">g</span><span class="o">:</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">?</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">N</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">N</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">g</span><span class="o">?</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">g</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">O</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; p&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;:checkbox&quot;</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">))});</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">g</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">P</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;listenersAdded&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC7'><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;keyup&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">C</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="p">[</span><span class="mi">13</span><span class="p">,</span><span class="mi">38</span><span class="p">,</span><span class="mi">40</span><span class="p">,</span><span class="mi">9</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="p">))){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">fullMatch</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">highlight</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="o">?!</span><span class="mi">1</span><span class="o">!==</span><span class="nx">f</span><span class="o">:!!</span><span class="nx">f</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">trim</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">closest</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="s2">&quot;down&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">closest</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;select option&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">m</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!=</span><span class="k">this</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="s2">&quot;up&quot;</span><span class="p">)});</span><span class="nx">l</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;p&quot;</span><span class="p">).</span><span class="nx">hide</span><span class="p">(),</span><span class="nx">k</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">text</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">trim</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">?</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">l</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">h</span><span class="o">?</span><span class="s2">&quot;g&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;p:eq(&quot;</span><span class="o">+</span></div><div class='line' id='LC8'><span class="nx">k</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;):not(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">x</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">z</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">).</span><span class="nx">show</span><span class="p">();</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;-marker&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">).</span><span class="nx">contents</span><span class="p">().</span><span class="nx">unwrap</span><span class="p">();</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">A</span><span class="p">,</span><span class="k">this</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s1">&#39;&lt;span class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s1">&#39;-marker&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;&lt;/span&gt;&quot;</span><span class="p">)})}}))</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;p&quot;</span><span class="p">).</span><span class="nx">show</span><span class="p">().</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;-marker&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">).</span><span class="nx">contents</span><span class="p">().</span><span class="nx">unwrap</span><span class="p">()})}});</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">&lt;=</span><span class="p">[</span><span class="mi">38</span><span class="p">,</span><span class="mi">40</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">9</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="p">)){</span><span class="mi">9</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">u</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">m</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;p:first&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">loopScrolling</span><span class="p">,</span></div><div class='line' id='LC9'><span class="nx">p</span><span class="o">=</span><span class="s2">&quot;:not(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">x</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">z</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="s2">&quot;default&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">mode</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">fillOnArrowPress</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:animated&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">trim</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">r</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="mi">40</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:hidden&quot;</span><span class="p">))</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;down&quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:visible&quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">)</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">u</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">nextAll</span><span class="p">(</span><span class="s2">&quot;:visible&quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">).</span><span class="nx">first</span><span class="p">().</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">u</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="p">.</span><span class="nx">nextAll</span><span class="p">(</span><span class="s2">&quot;:visible&quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">).</span><span class="nx">first</span><span class="p">().</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">u</span><span class="p">).</span><span class="nx">nextAll</span><span class="p">(</span><span class="s2">&quot;:visible&quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">).</span><span class="nx">first</span><span class="p">().</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">u</span><span class="p">);</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:visible&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">u</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">nextAll</span><span class="p">(</span><span class="s2">&quot;:visible&quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">).</span><span class="nx">first</span><span class="p">().</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span></div><div class='line' id='LC10'><span class="nx">u</span><span class="p">));</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">position</span><span class="p">().</span><span class="nx">top</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">position</span><span class="p">().</span><span class="nx">top</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">();</span><span class="nx">m</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">height</span><span class="p">()</span><span class="o">?</span><span class="nx">m</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="nx">p</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">height</span><span class="p">()</span><span class="o">&gt;</span><span class="mf">1.5</span><span class="o">*</span><span class="nx">p</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">(</span><span class="nx">r</span><span class="o">+</span><span class="nx">m</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">(</span><span class="nx">r</span><span class="o">+</span><span class="nx">p</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">(</span><span class="nx">r</span><span class="o">-</span> <span class="o">-</span><span class="nx">m</span><span class="p">)}</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">A</span><span class="p">).</span><span class="nx">text</span><span class="p">(),</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;fillonarrow&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">38</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:visible&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">prevAll</span><span class="p">(</span><span class="s2">&quot;:visible&quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">).</span><span class="nx">first</span><span class="p">().</span><span class="nx">length</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">u</span><span class="p">).</span><span class="nx">prevAll</span><span class="p">(</span><span class="s2">&quot;:visible&quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">).</span><span class="nx">first</span><span class="p">().</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">u</span><span class="p">),</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;p:visible&quot;</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="s2">&quot;:last&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">u</span><span class="p">)),</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">position</span><span class="p">().</span><span class="nx">top</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">position</span><span class="p">().</span><span class="nx">top</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">outerHeight</span><span class="p">(),</span></div><div class='line' id='LC11'><span class="nx">m</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">*</span><span class="nx">p</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">(</span><span class="nx">r</span><span class="o">-</span> <span class="o">-</span><span class="nx">m</span><span class="o">-</span><span class="mi">3</span><span class="o">*</span><span class="nx">p</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">height</span><span class="p">()</span><span class="o">-</span><span class="mi">3</span><span class="o">*</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">(</span><span class="nx">r</span><span class="o">+</span><span class="nx">m</span><span class="o">-</span><span class="mi">3</span><span class="o">*</span><span class="nx">p</span><span class="p">),</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">A</span><span class="p">).</span><span class="nx">text</span><span class="p">(),</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;fillonarrow&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)));</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="mi">13</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fillOnBlur</span><span class="p">)</span><span class="nx">H</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">click</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;p&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">A</span><span class="p">,</span><span class="k">this</span><span class="p">).</span><span class="nx">text</span><span class="p">().</span><span class="nx">trim</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">click</span><span class="p">(),</span><span class="nx">v</span><span class="o">=!</span><span class="mi">0</span><span class="p">)});</span><span class="o">!</span><span class="mi">1</span><span class="o">==</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">u</span><span class="p">).</span><span class="nx">click</span><span class="p">();</span><span class="s2">&quot;default&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">mode</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;up&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="mi">27</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">blur</span><span class="p">().</span><span class="nx">closest</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="s2">&quot;up&quot;</span><span class="p">)</span><span class="o">:</span><span class="mi">9</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">fillOnTab</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;p:visible:first&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC12'><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">f</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;p:visible:first&quot;</span><span class="p">).</span><span class="nx">click</span><span class="p">())}}});</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;change&quot;</span><span class="p">,</span><span class="s2">&quot;select&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;option:selected&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">).</span><span class="nx">text</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">l</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;changed&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;changed&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">change</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">change</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="s2">&quot;up&quot;</span><span class="p">))});</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-chupdate&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; p :checkbox&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">(),</span><span class="nx">I</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parent</span><span class="p">(),</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">))});</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; p&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span></div><div class='line' id='LC13'><span class="nx">x</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">z</span><span class="p">)){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-invalid-timeout&quot;</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">v</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">v</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="nx">v</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">parent</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">children</span><span class="p">().</span><span class="nx">index</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="s2">&quot;checkboxes&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">mode</span><span class="o">?</span><span class="nx">I</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">closest</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;option&quot;</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="nx">l</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;selected&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">siblings</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">val</span><span class="p">()),</span><span class="nx">e</span><span class="p">.</span><span class="nx">change</span><span class="p">(),</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">parent</span><span class="p">(),</span><span class="s2">&quot;up&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">u</span><span class="p">).</span><span class="nx">siblings</span><span class="p">().</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">u</span><span class="p">))}});</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">val</span><span class="p">().</span><span class="nx">trim</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="nx">m</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;option&quot;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="o">==</span></div><div class='line' id='LC14'><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">text</span><span class="p">().</span><span class="nx">trim</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">)});</span><span class="o">!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">forbidInvalid</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">closest</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">v</span><span class="p">).</span><span class="nx">siblings</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="nx">v</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">siblings</span><span class="p">(</span><span class="s2">&quot;select, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">v</span><span class="p">).</span><span class="nx">siblings</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="nx">v</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">fillOnBlur</span><span class="p">)</span><span class="nx">H</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">)).</span><span class="nx">click</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">val</span><span class="p">().</span><span class="nx">trim</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">siblings</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">),</span><span class="nx">y</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">siblings</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-invalid-timeout&quot;</span><span class="p">,</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">500</span><span class="p">));</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">val</span><span class="p">();</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">p</span><span class="o">!=</span><span class="nx">y</span><span class="p">.</span><span class="nx">val</span><span class="p">()</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC15'><span class="nx">y</span><span class="p">.</span><span class="nx">change</span><span class="p">().</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;changed&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}});</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">trim</span><span class="p">())</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">expandOnFocus</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">keyup</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="s2">&quot;val&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">children</span><span class="p">().</span><span class="nx">show</span><span class="p">();</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;down&quot;</span><span class="p">)}});</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;-div&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">disabled</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">siblings</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="s2">&quot;down&quot;</span><span class="p">)});</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()});</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">closest</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:visible&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;up&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;down&quot;</span><span class="p">),</span></div><div class='line' id='LC16'><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">focus</span><span class="p">())});</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">J</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parent</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;p&quot;</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;index&quot;</span><span class="p">)).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;:checkbox&quot;</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">fadeOut</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">animation</span><span class="p">.</span><span class="nx">duration</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">closest</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;change&quot;</span><span class="p">,[</span><span class="o">!</span><span class="mi">0</span><span class="p">])});</span><span class="nx">e</span><span class="p">.</span><span class="nx">autoLoad</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">noop</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">,</span><span class="k">this</span><span class="p">).</span><span class="nx">scroll</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">();</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;scrollTop&quot;</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="o">-</span><span class="nx">f</span><span class="o">-</span><span class="mi">50</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;pending&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;pending&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">autoLoad</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC17'><span class="nx">c</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;option[value]:last&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span><span class="s2">&quot;bottom&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">()</span><span class="o">/</span><span class="mi">2</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;pending&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;pending&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">autoLoad</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;option[value]:first&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span><span class="s2">&quot;top&quot;</span><span class="p">));</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;scrollTop&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">)}).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;scrollTop&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">K</span><span class="o">||</span><span class="p">(</span><span class="nx">K</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">(</span><span class="nx">L</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click.&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="s2">&quot;up&quot;</span><span class="p">)}));</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;listenersAdded&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parseJSON</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">length</span><span class="p">);</span></div><div class='line' id='LC18'><span class="nx">a</span><span class="o">=</span><span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">value</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">text</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&quot;separator&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">value</span><span class="o">||</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]).</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">x</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;optgroup&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">||</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]).</span><span class="nx">remove</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">trim</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">trim</span><span class="p">().</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">value</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">value</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">V</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC19'><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">value</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">value</span><span class="o">&amp;&amp;</span><span class="s2">&quot;optgroup&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]).</span><span class="nx">remove</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:animated&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">animation</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;up&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="o">||!</span><span class="k">this</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:hidden&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">easing</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">easing</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;no such easing: &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">easing</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">easing</span><span class="o">=</span><span class="s2">&quot;swing&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="s2">&quot;up&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">beforeClose</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">afterClose</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">h</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">slideUp</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;p-clicked-index&quot;</span><span class="p">,</span></div><div class='line' id='LC20'><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;-up&quot;</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">beforeOpen</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">afterOpen</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">h</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">slideDown</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;-up&quot;</span><span class="p">));</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;fillonarrow&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;fillonarrow&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">))})}}}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">closest</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">parent</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;p&quot;</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">index</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">animation</span><span class="p">.</span><span class="nx">duration</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;:checkbox&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:checkbox&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">p</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">,</span></div><div class='line' id='LC21'><span class="o">!</span><span class="nx">p</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">));</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">shiftKey</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;p-clicked-index&quot;</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;p-clicked-index&quot;</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">m</span><span class="o">?</span><span class="nx">m</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">m</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="nx">m</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;=</span><span class="nx">r</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">n</span><span class="p">]).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;:checkbox&quot;</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">D</span><span class="p">).</span><span class="nx">prepend</span><span class="p">(</span><span class="s2">&quot;&lt;span /&gt;&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">D</span><span class="p">).</span><span class="nx">fadeOut</span><span class="p">(</span><span class="nx">k</span><span class="o">/</span><span class="mi">5</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">q</span><span class="p">.</span><span class="nx">empty</span><span class="p">().</span><span class="nx">show</span><span class="p">();</span><span class="nx">l</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;:checkbox&quot;</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;div /&gt;&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">B</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;div /&gt;&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot;-text&quot;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">A</span><span class="p">).</span><span class="nx">text</span><span class="p">())).</span><span class="nx">append</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;div /&gt;&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">J</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="s2">&quot;\u00d7&quot;</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;index&quot;</span><span class="p">,</span></div><div class='line' id='LC22'><span class="nx">a</span><span class="p">)).</span><span class="nx">fadeIn</span><span class="p">(</span><span class="mf">1.5</span><span class="o">*</span><span class="nx">k</span><span class="p">))});</span><span class="nx">q</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;div style=&quot;clear: both&quot; /&gt;&#39;</span><span class="p">)});</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;p-clicked-index&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">closest</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;change&quot;</span><span class="p">,[</span><span class="o">!</span><span class="mi">0</span><span class="p">])}</span><span class="kd">function</span> <span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&quot;separator&quot;</span><span class="p">))</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&quot;header&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;p class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">z</span><span class="o">+</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">header</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;p class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">x</span><span class="o">+</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;option /&gt;&quot;</span><span class="p">);</span><span class="k">else</span> <span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;option /&gt;&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">value</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">text</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">pFillFunc</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">g</span><span class="p">),</span><span class="s2">&quot;checkboxes&quot;</span><span class="o">==</span></div><div class='line' id='LC23'><span class="nx">g</span><span class="p">.</span><span class="nx">mode</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="s1">&#39;&lt;input type=&quot;checkbox&quot; /&gt;&#39;</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">value</span><span class="p">);</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">m</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">m</span><span class="p">))}}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">u</span><span class="o">+</span><span class="s2">&quot;:visible&quot;</span><span class="p">);</span><span class="mi">0</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;:visible:first&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-([a-z])/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">()});</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]],</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]]);</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;data&quot;</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">])}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;scombobox&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span></div><div class='line' id='LC24'><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;-display&quot;</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;-value&quot;</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="s2">&quot;-invalid&quot;</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;-div&quot;</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nx">C</span><span class="o">+</span><span class="s2">&quot;-item&quot;</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot;-remove&quot;</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">C</span><span class="o">+</span><span class="s2">&quot;-holder&quot;</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;-list&quot;</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="s2">&quot;-mainspan&quot;</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="s2">&quot;-hovered&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="s2">&quot;-separator&quot;</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="s2">&quot;-header&quot;</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="s2">&quot;-dropdown-background&quot;</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="s2">&quot;-dropdown-arrow&quot;</span><span class="p">,</span><span class="nx">K</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;select /&gt;&quot;</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeAttr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;multiple&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">mode</span><span class="o">=</span><span class="s2">&quot;checkboxes&quot;</span><span class="p">);</span><span class="mi">0</span><span class="o">==</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;&#39;</span><span class="o">+</span></div><div class='line' id='LC25'><span class="nx">c</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">);</span><span class="mi">0</span><span class="o">==</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">);</span><span class="nx">F</span><span class="p">.</span><span class="nx">displayDropdown</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">showDropDown</span><span class="p">);</span><span class="s2">&quot;checkboxes&quot;</span><span class="o">!=</span><span class="nx">f</span><span class="p">.</span><span class="nx">mode</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;input class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">k</span><span class="o">+</span><span class="s1">&#39;&quot; type=&quot;text&quot; /&gt;&#39;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">(</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;font-size&quot;</span><span class="p">)</span><span class="o">+</span> <span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-top&quot;</span><span class="p">)</span><span class="o">+</span> <span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-bottom&quot;</span><span class="p">)));</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="p">.</span><span class="nx">tabindex</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;tabindex&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">tabindex</span><span class="p">);</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;input class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s1">&#39;&quot; type=&quot;hidden&quot; /&gt;&#39;</span><span class="p">);(</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:disabled&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">disabled</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span></div><div class='line' id='LC26'><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="p">).</span><span class="nx">hide</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">disabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-disabled&quot;</span><span class="p">));</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&lt;/div&gt;&#39;</span><span class="p">));</span><span class="s2">&quot;checkboxes&quot;</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">mode</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-checkboxes&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">remove</span><span class="p">(),</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;-div&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">C</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&lt;div class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">D</span><span class="o">+</span><span class="s1">&#39;&quot; /&gt;&lt;/div&gt;&#39;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">insertAfter</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;-div&quot;</span><span class="p">)),</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">D</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s1">&#39;&quot; id=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s1">&#39;-test-item&quot;&gt;&lt;div class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s1">&#39;-text&quot;&gt;x&lt;/div&gt;&lt;/div&gt;&#39;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;margin-left&quot;</span><span class="p">,</span></div><div class='line' id='LC27'><span class="s2">&quot;-9999px&quot;</span><span class="p">).</span><span class="nx">show</span><span class="p">()),</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="p">()</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">E</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-top&quot;</span><span class="p">))</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">E</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;margin-top&quot;</span><span class="p">))</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">E</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;border-top-width&quot;</span><span class="p">))</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">E</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-top&quot;</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="o">+</span><span class="s2">&quot;-div&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;min-height&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">remove</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;-display-div&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">insertAfter</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">)));</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="s2">&quot;max-width&quot;</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">listMaxWidth</span><span class="p">,</span><span class="s2">&quot;max-height&quot;</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">maxHeight</span><span class="p">});</span><span class="o">!</span><span class="mi">0</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">wrap</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;white-space&quot;</span><span class="p">,</span><span class="s2">&quot;normal&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">autoLoad</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">noop</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">loopScrolling</span><span class="o">=!</span><span class="mi">1</span><span class="p">);</span><span class="nx">P</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-init&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">F</span><span class="p">.</span><span class="nx">fill</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">data</span><span class="p">)},</span><span class="nx">fill</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span></div><div class='line' id='LC28'><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;option, optgroup&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">mode</span><span class="p">;</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">removeDuplicates</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">sort</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">T</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">sortAsc</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">reverse</span><span class="p">()),</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">empty</span><span class="p">(),</span><span class="nx">h</span><span class="p">.</span><span class="nx">empty</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)),</span><span class="nx">W</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="mi">2</span><span class="o">==</span><span class="nx">e</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">removeDuplicates</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">V</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">S</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;option, optgroup&quot;</span><span class="p">)),</span><span class="mi">0</span><span class="o">!=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;p /&gt;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">x</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">z</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">z</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">text</span><span class="p">()))</span><span class="o">:</span></div><div class='line' id='LC29'><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">x</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;optgroup&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;label&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;option&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">before</span><span class="p">(</span><span class="s2">&quot;&lt;option /&gt;&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">e</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">z</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">x</span><span class="p">));</span><span class="nx">f</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;p /&gt;&quot;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">text</span><span class="p">()).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">))});</span><span class="k">return</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="s1">&#39;&lt;span class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">A</span><span class="o">+</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">text</span><span class="p">())).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="s2">&quot;checkboxes&quot;</span><span class="o">==</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="s1">&#39;&lt;input type=&quot;checkbox&quot; /&gt;&#39;</span><span class="p">)}</span><span class="nx">h</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">b</span><span class="p">)}));</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-init&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">callback</span><span class="p">.</span><span class="nx">func</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">callback</span><span class="p">.</span><span class="nx">args</span><span class="p">),</span></div><div class='line' id='LC30'><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-init&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;checkboxes&quot;</span><span class="o">!=</span><span class="nx">m</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="s2">&quot;val&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;option:selected:last&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">());</span><span class="k">else</span> <span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;:selected&quot;</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">val</span><span class="p">()}).</span><span class="nx">get</span><span class="p">(),</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="s2">&quot;val&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">clear</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">).</span><span class="nx">empty</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">).</span><span class="nx">empty</span><span class="p">().</span><span class="nx">width</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">v</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="nx">v</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">data</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">data</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">data</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">disabled</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">mode</span><span class="p">;</span></div><div class='line' id='LC31'><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;checkboxes&quot;</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-disabled&quot;</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">);</span><span class="nx">a</span><span class="o">=!!</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-disabled&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="p">).</span><span class="nx">hide</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-disabled&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="p">).</span><span class="nx">show</span><span class="p">());</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">tabindex</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;tabindex&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;tabindex&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">options</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span></div><div class='line' id='LC32'><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">val</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">mode</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;default&quot;</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:disabled&quot;</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;checkboxes&quot;</span><span class="o">==</span><span class="nx">e</span><span class="o">?</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span><span class="o">||</span><span class="s2">&quot;[]&quot;</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;default&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">);</span><span class="mi">0</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s1">&#39;[value=&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">).</span><span class="nx">length</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">children</span><span class="p">().</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;selected&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">change</span><span class="p">(),</span><span class="nx">g</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">a</span><span class="p">))}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;checkboxes&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span></div><div class='line' id='LC33'><span class="nx">n</span><span class="o">+</span><span class="s2">&quot; p&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">));</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">))</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;:checkbox&quot;</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">q</span><span class="p">]))</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;:checkbox&quot;</span><span class="p">).</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;checked&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-chupdate&quot;</span><span class="p">,[</span><span class="o">!</span><span class="mi">0</span><span class="p">]);</span><span class="nx">h</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">f</span><span class="p">))}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">open</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="s2">&quot;down&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">close</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">t</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">n</span><span class="p">),</span><span class="s2">&quot;up&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">change</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;change&quot;</span><span class="p">,</span></div><div class='line' id='LC34'><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">r</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">focus</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">blur</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">keyup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;keyup&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">keydown</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">keypress</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;keypress&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">click</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">mousedown</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC35'><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">clickDropdown</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="p">),</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">invalid</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="mi">0</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">v</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">v</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">toSelect</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">).</span><span class="nx">insertAfter</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">reassignId</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">displayDropdown</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="p">).</span><span class="nx">show</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="p">).</span><span class="nx">hide</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">showDropdown</span><span class="o">?</span></div><div class='line' id='LC36'><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="p">).</span><span class="nx">show</span><span class="p">()</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="nx">q</span><span class="p">).</span><span class="nx">hide</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">}};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-init&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;Calling &quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; prior to initialization&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">b</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;No such method: &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; in jQuery.&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;()&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,{},</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">defaults</span><span class="p">,</span><span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">else</span> <span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;Incorrect usage&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC37'><span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;select, div&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;select&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">wrap</span><span class="p">(</span><span class="s2">&quot;&lt;div /&gt;&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">reassignId</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">()),</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,{},</span><span class="nx">g</span><span class="p">)),</span><span class="nx">F</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">:</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;target element is incorrect: &quot;</span><span class="p">,</span><span class="k">this</span><span class="p">)})};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">defaults</span><span class="o">=</span><span class="p">{</span><span class="nx">data</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">disabled</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">sort</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">sortAsc</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">removeDuplicates</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">fullMatch</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">highlight</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">expandOnFocus</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">tabindex</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">forbidInvalid</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">reassignId</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">mode</span><span class="o">:</span><span class="s2">&quot;default&quot;</span><span class="p">,</span><span class="nx">pMarkup</span><span class="o">:</span><span class="s1">&#39;&lt;span class=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">A</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;${text}&lt;/span&gt; &lt;span&gt;${additional}&lt;/span&gt;&#39;</span><span class="p">,</span><span class="nx">pFillFunc</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC38'><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="s2">&quot;&lt;p /&gt;&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">pMarkup</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;${text}&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">text</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;${additional}&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">additional</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">additional</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">))},</span><span class="nx">animation</span><span class="o">:</span><span class="p">{</span><span class="nx">duration</span><span class="o">:</span><span class="s2">&quot;fast&quot;</span><span class="p">,</span><span class="nx">easing</span><span class="o">:</span><span class="s2">&quot;swing&quot;</span><span class="p">},</span><span class="nx">listMaxWidth</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">screen</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">wrap</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">maxHeight</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">fillOnArrowPress</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">fillOnBlur</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">fillOnTab</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">showDropDown</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">callback</span><span class="o">:</span><span class="p">{</span><span class="nx">func</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">args</span><span class="o">:</span><span class="p">[]},</span><span class="nx">beforeOpen</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">beforeClose</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">afterOpen</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">afterClose</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">autoLoad</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">loopScrolling</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">extendDefaults</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">defaults</span><span class="p">,</span><span class="nx">a</span><span class="p">)}})(</span><span class="nx">jQuery</span><span class="p">,</span><span class="nb">document</span><span class="p">);</span></div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.05641s from github-fe134-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-ab437d541e9c517df422126b73a5694a1d43ee9e.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-f8fc00b8934006933bc2391fd76f435ac85a7016.js" type="text/javascript"></script>
      
      
  </body>
</html>

